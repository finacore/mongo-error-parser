name: Build

on:
  pull_request:
    branches: [ main ]
  push:
    branches:
      - '*'
      - '!gh-pages'

jobs:
  golint:
    name: Go Lint
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest

  horusec:
    name: Identify Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0

      - name: Running Horusec Security
        run: |
          curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
          horusec start -p="./" -e="true"

  unitytest:
    needs: [golint, horusec]

    name: Unity Test
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        goVersion: ["1.19", "1.18", "1.17", "1.16", "1.15", "1.14", "1.13"]
    
    steps:
    - name: Clone Repository 
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.goVersion }}

    - name: Test
      run: go test -v ./...

  build:
    needs: unitytest

    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@master
        with:
          fetch-depth: 0
        
      - name: Setup Go (latest)
        uses: actions/setup-go@v3
      
      - name: Run unity test
        run: |
          mkdir -p bin
          go test -short -coverprofile=bin/cov.out ./...

      - name: Run benchmark
        run: |
          go test -bench 'Benchmark' ./... | tee bin/bench.txt

      - name: Archive code coverage and bench results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: bin

  sonarcloud:
    needs: build

    name: SonarCloud
    runs-on: ubuntu-latest
    
    steps:
      - name: Checout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3

      - name: Download code coverage results
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report
          path: bin
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  benchmark:
    needs: build

    name: Performance Regeression.
    runs-on: ubuntu-latest

    steps:
      - name: Checout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download code coverage results
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report
          path: bin

      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'go'
          output-file-path: bin/bench.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          alert-threshold: '250%'
          auto-push: true
          fail-on-alert: true
          comment-on-alert: true
